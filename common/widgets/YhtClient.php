<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

namespace common\widgets;
use GuzzleHttp\Client;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7;
use Yii;

/**
 * Class YhtClient
 * @package Client
 * @author cwjackk
 */
class YhtClient extends \yii\base\Component
{
    public static $url = [
        'base'=>'https://api.yunhetong.com/api/',
        'token'=>'auth/login',
        'contract'=>[
            'list'=>'contract/list',
            'template'=>'contract/templateContract'
        ],
        'user'=>[
            'addC'=>'user/company',
            'addP'=>'user/person',
            'addCM'=>'user/companyMoulage',
            'addPM'=>'user/personMoulage'
        ]
    ];
    public static $timeOut = 900;
    public $tokenConf = [
        "appId"=>"2018062817051800007",
        "appKey"=>"wceNcK55gQE",
//        "signerId"=>"1099893"
    ];
    /**
     * @var Client
     */
    private $client;

    /**
     * 实例化请求句柄
     */
    public function init()
    {
        $this->client = new Client([
            'base_uri' => self::$url['base'],
        ]);
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function initToken($signerId=null){
        if ($signerId){
            //用户长效令牌
            $userOpt = array_merge($this->tokenConf,["signerId"=>$signerId]);
            $reqOpt = $this->getReqOption(0, $userOpt);
            $response = $this->client->post(self::$url['token'],$reqOpt);
            /*请求返回结果*/
            $token = $response->getHeader("token")[0]; //头部token
        }else{
            //平台长效命令
            //判断token是否过期
            $tokenExist = array_key_exists('tokenInfo',$_SESSION)? $_SESSION['tokenInfo']:" ";
            if(!is_array($tokenExist) || (time()-$tokenExist['time']>60*15) ){
                //超时重新获取
                $reqOpt = $this->getReqOption(0, $this->tokenConf);
                $response = $this->client->post(self::$url['token'],$reqOpt);
                /*请求返回结果*/
                $token = $response->getHeader("token")[0]; //头部token
                $_SESSION['tokenInfo'] = ['token'=>$token,'time'=>time()];//使用session存储结果
            }else{
                $token = $_SESSION['tokenInfo']['token'];
            }
        }
        return $token;
    }

    /**
     * @param $type 0.token请求头  1.平台api请求头(平台自身的长效令牌) 2.用户api请求头(创建者对应的长效令牌)
     * @param null $opt
     * @return array
     */
    public function getReqOption($type, $opt=null){
        if($type==0){
            $reqOpt = [
                'headers'=>["content-type"=>"application/json;charset=UTF-8"],
                'body' => "row data",
                'json' => $opt
            ];
        }elseif ($type==1){
            $reqOpt = [
                'headers'=>["content-type"=>"application/json;charset=UTF-8",'token'=>$this->initToken()],
                'body' => "row data",
                'json' => $opt
            ];
        }elseif ($type==2){
            $reqOpt = [
                'headers'=>["content-type"=>"application/json;charset=UTF-8",'token'=>$this->initToken(Yii::$app->session->get('signerId',0))],
                'body' => "row data",
                'json' => $opt
            ];
        }else{
            $reqOpt = [
                'headers'=>["content-type"=>"application/json;charset=UTF-8"],
            ];
        }
        return $reqOpt;
    }

    /**
     * @param null $method 方法
     * @param null $url 具体地址
     * @param null $json 具体参数
     * @param int $type token类型
     * @return mixed
     * @throws \GuzzleHttp\Exception\GuzzleException
     */
    public function sendReq($method=null, $url=null, $json=null, $type=1){
//        $json = [
//            "contractTitle"=>"荟家装云合同",
//            "templateId"=>"TEM1003301",
//            "contractData"=>[
//                '${name}'=>"大东",
//                '${mobile}'=>"13726449403",
//                '${id_no}'=>"sadfasdf18294903",
//                '${corporate_name}'=>"深圳荟家装科技有限公司",
//                '${business_licence}'=>"ASDFGHJKL001",
//                '${product_name}'=>"创客模式合同",
//                '${contract_date}'=>"2018-7-26"
//            ]
//        ];
        $reqHeader = $this->getReqOption($type, $json);
        $response = $this->client->request($method, $url, $reqHeader);
        $res = $response->getBody()->getContents();
        $respArr = json_decode($res,true);
        return $respArr;
    }
}
