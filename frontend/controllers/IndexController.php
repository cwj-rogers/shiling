<?php

namespace frontend\controllers;
use Yii;
use yii\web\Controller;
use common\models\WxFriendsShare;
use common\models\WxPictures;
use common\models\WxGoods;
use common\models\WxUser;
use common\models\WxActivitiesOrder;
use common\models\WxFriendsJoinLog;
use yii\db\Expression;
use yii\db\Exception;
use yii\db\Query;

class IndexController extends Controller
{
    /**
     * @var string
     */
//    public $layout = 'main';
    public $layout = 'kjmain';

    /**
     * 初始化 微信授权 保存微信用户信息
     */
    public function init()
    {
        if (!Yii::$app->wechat->isWechat){
            return Yii::$app->wechat->oauth->redirect()->send();
        }
        //开启session
        if (!Yii::$app->session->isActive){
            Yii::$app->session->open();
        }

        //平台验证和授权验证
        if (Yii::$app->wechat->isWechat && !Yii::$app->wechat->isAuthorized()){
            return Yii::$app->wechat->authorizeRequired()->send();
        }
        if(!Yii::$app->session->has("userinfo") && Yii::$app->wechat->isAuthorized()){
            (new WxUser)->createUser();
        }
        if(!isset($_SESSION['userinfo']['user_id']) && Yii::$app->wechat->isAuthorized()){
            (new WxUser)->createUser();
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @return string|\yii\web\Response
     */
    public function actionIndex(){
        //验证服务器
        if (Yii::$app->request->get('echostr',false)){
            //执行服务端业务
            $response = Yii::$app->wechat->server->serve();
            // 将响应输出
            return $response->send();
        }
        if(!array_key_exists('userinfo',$_SESSION)){
            return $this->refresh();
        }
        $res = [];//储存数据集
        //@Todo 1.参与过得 2.砍价成功的  是否显示
        $res['goodslist'] = (new WxGoods)->goodsList();
        //轮播图
        $slideshow = WxPictures::find()
            ->select("wp_id,wp_url,wp_jump_url")
            ->where(['wp_status'=>1])
            ->andWhere(['wp_city'=>['通用',$_SESSION['userinfo']['city']]])
            ->orderBy("wp_sort asc")
            ->asArray()->all();
        //$slideshow = $slideshow->createCommand()->getRawSql();
        //砍价活动页
        return $this->render('kanjia', ['res'=>$res,'slideshow'=>$slideshow]);
    }

    /**
     * @return string|\yii\web\Response
     */
    public function actionDetail(){
        if(!isset($_SESSION['userinfo']) || !isset($_SESSION['userinfo']['user_id'])){
            return $this->refresh();
        }
        /**
         * 1. 判断是自己还是好友访问
         * 2. 自己: 第一次进入? 创建新商品订单(砍一刀):读取数据库  已分享? 先砍一刀:不操作  砍价成功? 微信通知:到期提醒
         * 3. 好友: 符合砍价条件? 进入砍价: 不符合; 第一次砍价? 创建新用户: 直接砍价;
         */
        $userId = Yii::$app->request->get('user_id',0);
        $wgId = Yii::$app->request->get('wg_id',0);

        if($_SESSION['userinfo']['user_id']==$userId){
            //自己进入
            $isVisit = 0;//是否为游客
            //此商品是否有库存
            $goodInfo = WxGoods::findOne($wgId);
            if($goodInfo['wg_number']==0){
                $errorMsg = [
                    "message"=>'参与此商品活动人数已满,请您选择其他商品',
                    "jumpUrl"=>Yii::$app->request->referrer
                ];
                $this->layout = false;
                return $this->render('/public/wxerror',['message'=>$errorMsg['message'],"jumpUrl"=>$errorMsg['jumpUrl']]);
            }
            //是否已经参加过
            $isexist = WxActivitiesOrder::findOne(['user_id'=>$userId,'wg_id'=>$wgId]);
            //是否创建订单 1.没参加过 2.砍价完成,支付成功,过期的

            if (empty($isexist) || in_array($isexist['ago_status'],[2,3,4])){
                (new WxActivitiesOrder)->createActOrder($wgId, $userId);
            }else{
                $expriceTime = strtotime($isexist->ago_exprice_time);
                if (time()>$expriceTime){
                    (new WxActivitiesOrder)->createActOrder($wgId, $userId);
                }
            }
        }else{
            //好友进入
            $agoId = Yii::$app->request->get('ago_id',0);
            if(!$agoId){
                $agoId = WxActivitiesOrder::findOne(['user_id'=>$userId,'wg_id'=>$wgId]);
                $agoId = $agoId->ago_id;
            }
            $isVisit = 1;//是否为游客
            //今天是否已经分享
            $hasVisitShare = WxFriendsShare::findOne(['ago_id'=>$agoId,'visitor_id'=>$_SESSION['userinfo']['user_id'],'share_date'=>date("Y-m-d")]);
        }
        $hasVisitShare = (isset($hasVisitShare) && !empty($hasVisitShare))? 1:0;

        // 获取订单信息
        $res = WxActivitiesOrder::getActOrder($wgId, $userId);//商品订单
        if ($res && !empty($res)){
            $res['isVisit'] = $isVisit;
            $res['hasVisitShare'] = $hasVisitShare;
            return $this->render('kj-detail', ['res'=>$res]);
        }else{
            $errorMsg = [
                "message"=>'系统出错,找不到此活动',
                "jumpUrl"=>Yii::$app->request->referrer
            ];
            $this->layout = false;
            return $this->render('/public/wxerror',['message'=>$errorMsg['message'],"jumpUrl"=>$errorMsg['jumpUrl']]);
        }
    }

    /**
     * 异步访问砍价功能
     * @param $agoId
     * @param $userId
     * @param int $lat
     * @param int $lon
     * @throws \yii\db\Exception
     */
    public function actionKj($agoId,$userId,$lat=0,$lon=0)
    {
        if (Yii::$app->request->isAjax && $agoId && $userId){
            //找出商品订单
            $order = WxActivitiesOrder::findOne(['ago_id'=>$agoId,'user_id'=>$userId, 'ago_status'=>1]);
            if (empty($order)) \common\helpers\FuncHelper::ajaxReturn(201,'系统无反应');
            $order = $order->toArray();
            $SUID = $_SESSION['userinfo']['user_id'];
            //没砍完+没过期
            if ($order['ago_cut_number']<$order['ago_need_cut'] && time()<strtotime($order['ago_exprice_time'])){
                if($SUID==$userId){
                    //本人: 分享后才能砍价, 前后台都加判断避免刷单
                    if ($order['ago_share_time']>0 && $order['ago_share_kanjia']==0){
                        $exsit = WxFriendsJoinLog::findOne(['ago_id'=>$agoId,'user_id'=>$order['user_id'], 'fj_join_date'=>date("Y-m-d")]);
                        if (empty($exsit)){
                            $res = (new WxFriendsJoinLog)->kanjiaRule('user',$order,$agoId,$userId,$lat,$lon);
                            if($res) \common\helpers\FuncHelper::ajaxReturn(200,'success', $res);
                        }else{
                            \common\helpers\FuncHelper::ajaxReturn(202,'您的砍价次数已用完');
                        }
                    }else{
                        \common\helpers\FuncHelper::ajaxReturn(202,'分享好友后获得砍价机会');
                    }
                }else{
                    //朋友: 1.同城 2.每天只能一次 3.已经分享给朋友 4."通用产品不判断城市"
                    $Scity = $_SESSION['userinfo']['city'];
                    //城市参与条件
                    if(mb_strpos($Scity,$order['ago_city'])!==false || mb_strpos($order['ago_city'], $Scity)!==false){
                        //分享参与条件
                        $shareExsit = WxFriendsShare::findOne(['ago_id'=>$agoId,'visitor_id'=>$SUID,'share_date'=>date("Y-m-d")]);
                        if (!empty($shareExsit)){
                            //今日未砍价条件
                            $exsit = WxFriendsJoinLog::findOne(['ago_id'=>$agoId,'user_id'=>$SUID, 'fj_join_date'=>date("Y-m-d")]);
                            if (empty($exsit)){
                                $res = (new WxFriendsJoinLog)->kanjiaRule('friends',$order,$agoId,$SUID,$lat,$lon);
                                if($res) \common\helpers\FuncHelper::ajaxReturn(200,'success', $res);
                            }else{
                                \common\helpers\FuncHelper::ajaxReturn(202,'今天您的帮助次数已用完');
                            }
                        }else{
                            \common\helpers\FuncHelper::ajaxReturn(202,'分享好友后获得砍价机会');
                        }
                    }else{
                        \common\helpers\FuncHelper::ajaxReturn(202,'双方好友必须在同一城市,当前位置:'.$Scity);// 返回失败
                    }
                }
            }else{
                \common\helpers\FuncHelper::ajaxReturn(202,'该商品活动已过期');
            }
        }
        // 返回失败
        \common\helpers\FuncHelper::ajaxReturn(201,'系统无反应');
    }

    /**
     * @param $agoId
     * @throws \yii\db\Exception
     */
    public function actionShare($agoId, $userId)
    {
        //增加一个分享记录表
        (new WxFriendsShare())->insertLog($agoId, $userId, $_SESSION['userinfo']['user_id']);
        //订单分享记录+1
        Yii::$app->db->createCommand()
            ->update("yii2_wx_activities_order",["ago_share_time"=>new Expression("`ago_share_time`+1")],['ago_id'=>$agoId])
            ->execute();
        \common\helpers\FuncHelper::ajaxReturn(200,'success');
    }

    /**
     * 异步记录用户地理位置
     */
    public function actionUserLocal($location)
    {
        if (Yii::$app->request->isAjax){
            //调用频率15分钟一次
             $Uinfo = WxUser::findOne(['user_id'=>$_SESSION['userinfo']['user_id'] ]);
             $timeD = time() - strtotime($Uinfo->update_time);
             if(!empty($Uinfo) && $timeD<900){
                 \common\helpers\FuncHelper::ajaxReturn(200,'位置已更新成功');
             }
             $key = '2H3BZ-LFJR3-YE63J-YEZCQ-DV2YK-L7BYH';
             $url = "https://apis.map.qq.com/ws/geocoder/v1/?location=" . $location . "&key=" . $key;
             $res = json_decode(file_get_contents($url), true);
             if($res['status']==0){
                if (isset($res['result']['ad_info']['province']) && isset($res['result']['ad_info']['city'])){
                    $province = $res['result']['ad_info']['province'];
                    $city = $res['result']['ad_info']['city'];
                    $_SESSION['userinfo']['province'] = $province;
                    $_SESSION['userinfo']['city'] = $city;

                    try{
                        //更新用户表实时位置
                        Yii::$app->db->createCommand()
                            ->update('yii2_wx_user',['province'=>$province,'city'=>$city, 'update_time'=>date("Y-m-d H:i:s")],['user_id'=>$_SESSION['userinfo']['user_id']])
                            ->execute();
                    }catch (Exception $e){
                        throw json_encode($e->getMessage());
                    }

                    \common\helpers\FuncHelper::ajaxReturn(200,'success');
                }else{
                    \common\helpers\FuncHelper::ajaxReturn(205,'地理位置不存在请刷新页面');
                }
             }else{
                 \common\helpers\FuncHelper::ajaxReturn(204,'获取位置失败请刷新页面');
             }
        }
    }

    /**
     *  用户中心
     * @param $ago_status
     * @return string
     */
    public function actionUser($ago_status){
        if(!array_key_exists('userinfo',$_SESSION)){
            return $this->refresh();
        }

        $res = WxActivitiesOrder::getOrderList($_SESSION['userinfo']['user_id'],$ago_status);
        return $this->render('user',['res'=>$res]);
    }

    /**
     *
     */
    public function actionFoolUser(){
        $data = (new Query())->from("yii2_wx_friends_join_log")
            ->select("fj_id,user_id,fj_user_name,fj_image,fj_cut_price,created_time")
            ->limit(10)
            ->orderBy("fj_id desc")
            ->all();
        foreach ($data as $k => $v){
            $joinTime = strtotime($v['created_time']);
            $data[$k]['leadtime'] = time()-$joinTime>3600? mt_rand(1,60):ceil((time()-$joinTime)/60);
        }
        \common\helpers\FuncHelper::ajaxReturn(200, 'success', $data);
    }

    public function actionFoolUserInDetail($ago_id){
        $data = (new Query())->from("yii2_wx_friends_join_log")
            ->select("fj_id,user_id,fj_user_name,fj_image,fj_cut_price,created_time")
            ->limit(10)
            ->where(["ago_id"=>$ago_id])
            ->orderBy("fj_id desc")
            ->all();
        foreach ($data as $k => $v){
            $joinTime = strtotime($v['created_time']);
            $data[$k]['leadtime'] = time()-$joinTime>3600? mt_rand(1,60):ceil((time()-$joinTime)/60);
        }
        \common\helpers\FuncHelper::ajaxReturn(200, 'success', $data);
    }

    public function actionClear(){
//        Yii::$app->session->removeAll();
//        p(Yii::$app->session);
    }
}
